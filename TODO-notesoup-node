Notesoup/Node/Redis TODO list
12/24/11 -br


---
- BUG: Send uses sendnote?!/!
	- recode...

	- BUG: send race? send all to trash doesn't clear all the notes from the source
		- seems unpredictable. race?

- BUG: Widgets / script loading
	- edit widgets for new note scheme
	- fails due to http: prefix check
	
	- how to relod the widgets?
		- used to use paste-files somehow

- BUG: Fix The Blocking Widgets Bug
	- bug: oops gen 1
	- TypeError: 'null' is not an object (evaluating 'note.set')
	- http:// imports fetch using /geturl!

	var self = notesoup.notes[...];

- roll the widgets
	- decision: define "note"
	- ink widget has lots of nice errors with aflax and sound
	- graphics look awful, too

- BUG: there is no error handling


- feat: produce notelist for doCommand/paste restore
	- (part done: backup note does this clumsily now by popping a window)
	- make a way to copy
	- send via email would be nice too

- alpha server on http://alpha.notesoup.net:3000
	- todo: run nodejs at boot time
	- todo: backup .db

- API buildout 
	- big bug: ACL checks across the API
	- api_anon_ vs. api_

- bug: note color change doesn't go on notify bus, waits for sync instead
	- notify plumbing (tofolder...)
- bug: /say blah
	- "undefined says: blah"
	- username wiring in the message layer

- startup: command line option for push server on/off
	- npm install optimist

- bug: node load.js doesn't terminate properly

- startup: auto load system and widgets if they aren't there
- loadnotes: 
	capture .files for acl
- loaduser
	capture .passwd file
- dumpnotes
- guest user: content in template/soupbase/guest
	- folder permissions
	- welcome/help
	- auto-refresh every 15 minutes
- new user: content in template/soupbase/newuser

- bug: css for note titles is different from tiny soup?!

- bugs:
	- bug: mtimes in the note, or not?
		- savenote, sendnote, loadfiles
	- bug: same for id?

Ext v99?  Touch?  Mac?


- bug: # Only a few methods are allowed if we're not logged in

	if method == 'getfeed': return apigetfeed(params)
	if method == 'getnote': return apigetnote(params)

	# Command below this point are only allowed for logged-in requestors

	if method == 'geturl': return apigeturl(params)
		- this is required to load widget .js on the fly

	if method == 'gettemplatelist': return apigettemplatelist(params)
		- (have) needs 'requestor' - logged in user from session
		- todo: rework the client to use getnotes and delete this api

	if method == 'setfolderpassword': return apisetfolderpassword(params)
		- use api_setfolderacl {password: password}
		- checking the password requires http auth or equiv.

	if method == 'getfolderacl': return apigetfolderacl(params)

	if method == 'copyfolder': return apicopyfolder(params)
	if method == 'deleteuser': return apideleteuser(params)

	if method == 'postevent': return apipostevent(params)
