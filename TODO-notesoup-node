_____       _         _____                
|   | | ___ | |_  ___ |   __| ___  _ _  ___ 
| | | || . ||  _|| -_||__   || . || | || . |
|_|___||___||_|  |___||_____||___||___||  _|
                                       |_|  
                                       
Notesoup/Node/Redis TODO list
1/31/12 -br

===
heroku-start.sh
	- use read to get a system password
	- set it as a config var
	- check the config var in initdb

echo Enter an admin password for the new server:
read pass1
echo Enter it again:
read pass2
if [ $pass1 -ne $pass2 ]
	echo Passwords do not match.
	exit 1
fi
heroku config:add password=$pass1

===
- bug: client: can't set the same note color twice
===

/backup
	isroot	
	redis-dump

===
RACE CONDITION TEST

- try rushing multiple web workers
===
blitz.io sync test

-X POST -H 'Content-Type: application/json' -d '{"method":"sync","params":{"fromfolder":"system/welcome","count":"0","lastupdate":"0"},"id":0}' http://alpha.notesoup.net:3000/api

sync:
{"method":"sync","params":{"fromfolder":"system/welcome","count":"0","lastupdate":"0"},"id":0}
===
scoreboard
	response times hash
	HINCR /stats/apitimes/openfolder[time-in-ms
	hincrby stats/api/openfolder 13 1
===
- postEvent was dropped...
	- send plumbing seems inactive?
	- nothing shows up on push bus
===
- bug: deletions don't sync
===
Folder existence bugs
- bug: disallow navigation to nonexistent folder
- bug: getfolderlist should use fldr/ key

- bug: deletefolder 
	- requires owner permission
	- should refuse to delete a folder with notes in it (mtime/ or notes/ not empty)
	- should then delete fldr/

- bug? does sync handle nonexistent mtime/ or notes/ properly?

- solution: use fldr/ key as definitive for existence of folder
- fix: createFolder sets fldr/u/f key
- fix: getaccess disallow invalid folder (?)	

===
factor the server into
	- what folder?
	- linked how? (study express?)
	user
	folder
	note
	acl
	load
===
INSTALL-OSX
Install-nodester
Install-nodejitsu
===
DOC
	- doubleclick to edit a note
	- shift-doubleclick -> edit source

===
API completeness

- deleteuser
- copyfolder
- postevent

===
ACL support

- logged-in vs. not-logged-in api points

- check: other acl checks
	- double check the "prelogin" command roster for issues
	- deleteuser

===
Notification plumbing issues
- bug: postEvent is a stub

- bug: note color change doesn't go on notify bus, waits for sync instead
	- notify plumbing (tofolder...)


===
- review client mtime handling
	- widgets use it
	- dragdrop uses it
	- updatenote uses it

===
API buildout 

- bug: unimplemented API:
	if method == 'getfeed': return apigetfeed(params)
	if method == 'getnote': return apigetnote(params)
		- needed for portable hole
		- can't it check the cache first?

	# Command below this point are only allowed for logged-in requestors

	if method == 'setfolderpassword': return apisetfolderpassword(params)
		- use api_setfolderacl {password: password}
		- checking the password requires http auth or equiv - how in node?

	if method == 'copyfolder': return apicopyfolder(params)
	if method == 'deleteuser': return apideleteuser(params)
	if method == 'postevent': return apipostevent(params)

===
- bug: note needs both xpos and ypos else it's repositioned
- bug: if you're fast, you can drop a menu before the folder list is ready.
- bug? geturl: check for .. in path
- bug: need better handling for expired sessions
	- server restart kills sessions 
	- they can time out anyway
	- client thinks it's logged in
	- ...
====
Feature candidates

- backup
	- per folder 'download this folder'
	- system 'download all'
		- but could use redis replication

- messages stack

- feat: createuser from skeleton
	- set up folders with permissions:
		- inbox/senders/*
		- public/readers/*
		- trash/
	- initial welcome-folder content

- multi-tenancy via Host: header / database index map

- auto-expire the trash

- notesoup time machine
	- move deleted notes somewhere 'magic'
	- infinite undo/redo
	- pushbutton backup/restore
	- privacy nightmare

- locked/static cached workspace
	- caching
	- publish/expire controls

- besides socket.io:
	now.js
	http://sharejs.org/

- publish-folder-to
	- url, user, password, tofolder
	- push contents vs. replace?
	- destination public or private?
===
Production 

- alpha server
	- todo: run nodejs at boot time
	- todo: backup .db
		- script to copy db to dbbackups/db-date
		- cron to run it

- test the redis session store
	- heroku
	- ec2

- Redis 32 bit vs 64 bit
	- next server rebuild use 32 bit


===
Note Content and Import/Export

- guest user: content in template/soupbase/guest
	- welcome/help
	- feat: auto-refresh every 15 minutes

===
widget issues

- bug: flickrjson widget fails on alpha box but works here
- bug: same fail on heroku
	- alpha box can't nc to bitlash.net
	- firewall problem?
	
	- problem is, it's sending back a wierd reply (bad url??)
	
	- why is it different on the EC2 host?
	- curl from the ec2 host seems to fetch it ok

http://api.flickr.com/services/feeds/photos_public.gne?tags=sunset&format=json

	bug: geturl from server at ec2 gets error page

	curl from command line here, dreamhost, ec2 all XML redirection content
	geturl from server on laptop gets json and it all works
	fetching the url in the browser works

- broken widgets
	- BUG: avatar: clicking the icon sends you to accesserror
	- porthole needs getnote
	- rss: needs /getfeed service
	- polling: generates Ext.get() error

- new widgets
	- server check widget
	- sensor widget (bitlash/arduino integration)

===
- sound is broken
	SoundManager2
		requires flash
		http://www.schillmania.com/projects/soundmanager2/doc/download/
	JPlayer
		http://www.jplayer.org/
	html5 div hack


===
note slinging

- dumpnotes
	- the redis-dump script is a nice temporary solution
- feat: produce notelist for doCommand/paste restore
	.getjson() does it
	- (part done: backup note does this clumsily now by popping a window)
	- make a way to copy
	- send via email would be nice too
- fishing
	grep -rl "\"id\":" . | more
	grep -rl "\"syncme\":" . | xargs edit

===

- project: SQUEEZENOTE
	- make the baseline note attributes as small as possible
	- right now they dominate the payload
	- fixup every place that uses the attributes
	- hack loadfile to map attributes
	c, x, y, w, h, t, n, z, i,
	free: abdefgjklmopqrsuv
	
	meta: id, mtime, folder, permissions
