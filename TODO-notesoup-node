Notesoup/Node/Redis TODO list
12/25/11 -br


- BUG: deleting large numbers of notes fails
	- gets complaint about response headers
	- needs two changes:
		- accept a note list
		- use the async pipeline

- CRASH: erase all notes crashes the server
	deletes the same note over and over

---
- BUG: Send uses sendnote?!/!
	- recode...

	- BUG: send race? send all to trash doesn't clear all the notes from the source
		- seems unpredictable. race?

===

- BUG: Widgets / script loading
	- import fails due to http: prefix check
	- import /js-src/js-widgets/clock fails
		- /geturl not implemented
			- used in: getimports
			- used in: flickrfeed widget
			- used in: twitter widget
	
- BUILD: how to reload the widgets? widgetbuilder.js!
	- erase the user/templates folder
	- go to the user/widgets folder
	- erase it too
	- enter this command:
{notename:'build',imports:'/js-src/js-widgets/widgetbuilder.js'}
	
	- if the target import note has an import field,
		force-import _only_ that field.
		- otherwise do the field-merge.
		this maps /system/templates/@Clock
			to /js-src/js-widgets/clock.js
	
===

- widget bugs
	- rss: needs /getfeed service
	- polling: generates Ext.get() error
===

- sound is broken
	SoundManager2
		requires flash
		http://www.schillmania.com/projects/soundmanager2/doc/download/
	JPlayer
		http://www.jplayer.org/
	html5 div hack

- BUG: there is no error handling
- BUG: there is no ACL checking

- API buildout 
	- big bug: ACL checks across the API
	- api_anon_ vs. api_

- feat: produce notelist for doCommand/paste restore
	.getjson() does it
	- (part done: backup note does this clumsily now by popping a window)
	- make a way to copy
	- send via email would be nice too

- alpha server on http://alpha.notesoup.net:3000
	- todo: run nodejs at boot time
	- todo: backup .db
		- script to copy db to dbbackups/db-date
		- cron to run it

- bug: folderlist, templatelist are not sorted properly

- bug: note color change doesn't go on notify bus, waits for sync instead
	- notify plumbing (tofolder...)
- bug: /say blah
	- "undefined says: blah"
	- username wiring in the message layer

- bug: need better handling for expired sessions
	- server restart kills sessions 
	- they can time out anyway
	- client thinks it's logged in
	- ...

- startup: command line option for push server on/off
	- npm install optimist

- multi-tenancy via Host: header / database index map

- notesoup time machine
	- infinite undo/redo
	- pushbutton backup/restore

- bug: node load.js and loadsoup.js don't terminate properly

- startup: auto load system and widgets if they aren't there
- loadnotes: 
	capture .files for acl
- loaduser
	capture .passwd file
- dumpnotes
- guest user: content in template/soupbase/guest
	- folder permissions
	- welcome/help
	- auto-refresh every 15 minutes
- new user: content in template/soupbase/newuser
- improved system/ and widget/ content

- bug: css for note titles is different from tiny soup?!

- project: SQUEEZENOTE
	- make the baseline note attributes as small as possible
	- right now they dominate the payload
	- fixup every place that uses the attributes
	- hack loadfile to map attributes
	c, x, y, w, h, t, n, z, i,
	free: abdefgjklmopqrsuv
	
	meta: id, mtime, folder, permissions

	RESOLVES:
		- bug: mtimes in the note, or not?
			- savenote, sendnote, loadfiles
		- bug: same for id?

Ext v99?  Touch?  Mac?


- bug: # Only a few methods are allowed if we're not logged in
- bug: Some methods are only legal for the ˜˜'system' user

	if method == 'getfeed': return apigetfeed(params)
	if method == 'getnote': return apigetnote(params)

	# Command below this point are only allowed for logged-in requestors

	if method == 'gettemplatelist': return apigettemplatelist(params)
		- (have) needs 'requestor' - logged in user from session
		- todo: rework the client to use getnotes and delete this api

	if method == 'setfolderpassword': return apisetfolderpassword(params)
		- use api_setfolderacl {password: password}
		- checking the password requires http auth or equiv - how in node?

	if method == 'getfolderacl': return apigetfolderacl(params)

	if method == 'copyfolder': return apicopyfolder(params)
	if method == 'deleteuser': return apideleteuser(params)

	if method == 'postevent': return apipostevent(params)
