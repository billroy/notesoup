{"imports":"http://chowder.notesoup.net/js-src/js-widgets/deck.js","height":230,"mtime":1203978741,"cardcolumns":7,"id":"noteCALetXcT","from":"system in system/widgets","bgcolor":"#ccffcc","suits":["s","h","d","c"],"buttons":[["1 up","deal(1);"],["5 up","deal(5);"],["shuffle","shuffle();"]],"width":140,"cardgutter":12,"text":"<script type='text/javascript'>\n/**\n*\tdeck.js - Note Soup playing card deck widget\n*\tCopyright 2007, 2008 by Bill Roy\n*\tAll rights reserved.\n*/\nvar note = notesoup.ui.getEnclosingNote(this);\nnote.set({\n\n\tbgcolor: '#008000',\n\n\tinit: function() {\n\t\tthis.show();\n\t\tthis.sendself.defer(1000, this, ['sync']);\n\t},\n\n\tbackImage: notesoup.imageHost + 'images/cards_png/b1fv.png',\t// or b2fv for red\n\tsuits: ['s','h','d','c'],\n\tranks: [2,3,4,5,6,7,8,9,10,'j','q','k','1'],\n\n\tcardxoffset: 150,\n\tcardyoffset: 50,\n\tcardwidth: 130,\n\tcardgutter: 12,\n\tcardheight: 76,\n\tcardcolumns: 7,\n\n\tmakecard: function() {\n\n\t\tvar x = this.cardxoffset + ((this.cardcount % this.cardcolumns) * (this.cardwidth + this.cardgutter));\n\t\tvar y = this.cardyoffset + Math.floor(this.cardcount / this.cardcolumns) * this.cardheight;\n\t\t//notesoup.say('Pos: ' + this.cardcount + ': ' + x + ' ' + y);\n\n\t\tvar thecard = this.getrandomcard();\n\t\tif (!thecard) return;\n\t\t \n\t\tvar cardnote = {\n\t\t\tid: 'card' + notesoup.randomName(20), \n\t\t\tmtime: notesoup.getServerTime(),\n\t\t\trank: thecard.rank,\n\t\t\tsuit: thecard.suit,\n\t\t\tdeckid: this.id,\n\t\t\tnosave: true,\n\t\t\twidth: this.cardwidth,\n\t\t\txPos: x,\n\t\t\tyPos: y,\n\t\t\tzIndex: 0,\n\t\t\tbgcolor: '#f9f9f9',\n\t\t\tnotetype: 'proxy',\n\t\t\tproxyfor: notesoup.imageHost + 'images/cards_png/' + this.suits[thecard.suit] + this.ranks[thecard.rank] + '.png',\n\t\t};\n\t\tthis.sendself('showcard', cardnote);\n\t},\n\n\tshowcard: function(thecard) {\n\t\tnotesoup.updateNote(thecard);\n\t},\n\n\tsnapcard: function() {\n\t\tnotesoup.sound.play('/sound/45813__themfish__draw_card.mp3');\n\t\t//\t\t19244__deathpie__cardDrop2.mp3');\n\t},\n\n\tdeletecard: function(cardid) {\n\t\tnotesoup.destroyNote(cardid);\n\t},\n\n\tdeal: function(howmany, showing) {\n\t\tthis.sendself('snapcard');\n\t\tthis.updatedealt();\n\t\twhile (howmany-- > 0) {\n\t\t\tthis.makecard(showing);\n\t\t}\n\t},\n\n\tshuffle: function() {\n\t\tnotesoup.sound.play('/sound/19245__deathpie__shuffle.mp3');\n\t\tthis.cards = {};\n\t\tfor (var n in notesoup.notes) {\n\t\t\tif (n == this.id) continue;\n\t\t\tif (notesoup.notes[n].deckid == this.id) {\n\t\t\t\t//notesoup.say(\"Deleting card \" + notesoup.notes[n].rank + ' ' + notesoup.notes[n].suit);\n\t\t\t\tthis.sendself('deletecard', n);\n\t\t\t}\n\t\t}\n\t},\n\t\n\tsync: function() {\n\t\tfor (var n in notesoup.notes) {\n\t\t\tif (n == this.id) continue;\n\t\t\tif (notesoup.notes[n].deckid == this.id) {\n\t\t\t\tthis.sendself('showcard', notesoup.notes[n]);\n\t\t\t}\n\t\t}\n\t},\n\n\tupdatedealt: function() {\n\t\tthis.dealt = [];\n\t\tthis.cardcount = 0;\n\n\t\tfor (var s=0; s < this.suits.length; s++) {\n\t\t\tthis.dealt[s] = [];\n\t\t\tfor (var r=0; r < this.ranks.length; r++) this.dealt[s][r] = false;\n\t\t}\n\n\t\tfor (var n in notesoup.notes) {\n\t\t\tif (notesoup.notes[n].deckid == this.id) {\n\t\t\t\tthis.cardcount++;\n\t\t\t\tthis.dealt[notesoup.notes[n].suit][notesoup.notes[n].rank] = true;\n\t\t\t}\n\t\t}\n\t\t//notesoup.say('Dealt: ' + this.cardcount);\n\t},\n\n\tgetrandomcard: function() {\n\t\tvar cardsleft = this.suits.length * this.ranks.length - this.cardcount;\n\t\tif (cardsleft <= 0) {\n\t\t\tnotesoup.say('No cards left to deal.  Shuffle to start again.', 'error');\n\t\t\treturn null;\n\t\t}\n\t\tvar cardpicked = this.random(cardsleft);\n\t\t//notesoup.say('Picked card ' + cardpicked + ' of ' + cardsleft);\n\n\t\tfor (var s=0; s < this.suits.length; s++) {\n\t\t\tfor (var r=0; r < this.ranks.length; r++) {\n\t\t\t\tif (this.dealt[s][r]) continue;\n\t\t\t\tif (--cardpicked < 0) {\n\t\t\t\t\tthis.dealt[s][r] = true;\n\t\t\t\t\tthis.cardcount++;\n\t\t\t\t\treturn {suit: s, rank: r};\n\t\t\t\t}\n\t\t\t\t//else notesoup.say('Skipping card ' + s + ' ' + r);\n\t\t\t}\n\t\t}\n\t\tnotesoup.say('oops dealbot broke');\n\t\treturn null;\n\t},\n\n\n\trandom: function(max) { return Math.floor(Math.random() * max); },\n\tpick: function(list) { return '' + list[Math.floor(Math.random() * list.length)]; },\n\tpicksuit: function() { return random(4); },\n\tpickrank: function() { return random(13); },\n\n\tbuttons: [\n\t\t['1 up', 'deal(1);'],\n\t\t//['1 down', 'deal(1, false);'],\n\t\t['5 up', 'deal(5);'],\n\t\t//['5 down', 'deal(5, false);'],\n\t\t['shuffle', 'shuffle();']\n\t],\n\n\tmakeButton: function(b) {\n\t\treturn [\n\t\t\t'<input type=\"submit\" value=\"', b[0], \n\t\t\t'\" onclick=\"{notesoup.ui.getEnclosingNote(this).', b[1], ';return false;}\" />'\n\t\t].join('');\n\t},\n\n\tmakeButtons: function() {\n\t\tvar o = [];\n\t\to.push('<center>');\n\t\tfor (var i=0; i < this.buttons.length; i++) {\n\t\t\to.push(this.makeButton(this.buttons[i]));\n\t\t}\n\t\to.push('</center>');\n\t\treturn o.join('');\n\t},\n\n\tonrender: function() {\n\t\tvar markup = [\n\t\t\t'<img style=\"width:100%;\" src=\"', this.backImage, '\"/>',\n\t\t\tthis.makeButtons()\n\t\t].join('');\n\t\tthis.setContentDiv(markup);\n\t},\n\n\tface: function(upness) {\n\t\t//notesoup.say('Click! ' + suit + ' ' + rank);\n\t\t//this.showing = upness;\n\t\t//this.onrender();\n\t},\n\n\tclick: function(e) {\n\t\tthis.sendself('face', !this.showing);\n\t}\n});\n//Ext.get(note.id+'_content').on('click', note.click, note);\nnote.init();\n</script>","cardheight":76,"cardyoffset":50,"syncme":true,"backImage":"http://notesoup.net/images/cards_png/b1fv.png","zIndex":4,"cardwidth":130,"xPos":798,"ranks":[2,3,4,5,6,7,8,9,10,"j","q","k","1"],"cardxoffset":150,"yPos":36,"notename":"Deck"}