{"syncme":true,"xPos":536,"tweetttl":30,"from":"system in system/widgets","width":250,"imports":"http://chowder.notesoup.net/js-src/js-widgets/twitterizer.js","nexttweet":-1,"refreshtimer":0,"yPos":156,"refreshtimeout":20,"height":70,"zIndex":12,"bgcolor":"#ccffcc","text":"<script type='text/javascript'>\n/**\n*\ttwitterizer.js - Note Soup twitter public tweet widget\n*\tCopyright 2008 by Bill Roy\n*\tAll rights reserved.\n*/\nvar note = notesoup.ui.getEnclosingNote(this);\nnote.set({\n\n\tbigtalker: false,\n\tdisplaytimeout: 1,\n\tdisplaytimer: 0,\n\tnexttweet: -1,\n\trefreshtimeout: 20,\n\trefreshtimer: 0,\n\ttweetttl: 30,\n\n\tinit: function() {\n\t\tif (notesoup.foldername == 'system/widgets') {\n\t\t\tthis.setContentDiv('Copy to another workspace to activate.');\n\t\t\treturn;\n\t\t}\n\t\tnotesoup.newNotePositionMode = 'random';\n\t\tif (notesoup.aflax.connected) this.gettweets();\n\t\telse this.init.defer(100, this);\n\t},\n\n\tgettweets: function(str) {\n\t\tthis.geturl('http://twitter.com/statuses/public_timeline.json?since_id=' + (this.maxid || 0));\n\t},\n\n/*****\n    {\n        \"created_at\": \"Wed Jan 09 13:57:27 +0000 2008\", \n        \"id\": 579700522, \n        \"source\": \"web\", \n        \"text\": \"New blog post: Pay my student loans, please: student launches donation site to get help making payments http:\\/\\/tinyurl.com\\/2dncop\", \n        \"truncated\": false, \n        \"user\": {\n            \"description\": \"Personal finance magazine for students and young adults\", \n            \"id\": 8241542, \n            \"location\": \"\", \n            \"name\": \"youngmoney\", \n            \"profile_image_url\": \"http:\\/\\/s3.amazonaws.com\\/twitter_production\\/profile_images\\/19015422\\/logo_125_125_normal.png\", \n            \"protected\": false, \n            \"screen_name\": \"youngmoney\", \n            \"url\": \"http:\\/\\/www.youngmoney.com\"\n        }\n    }, \n*****/\n\n\tdisplay: function(text) {\n\t\tnotesoup.frontstage.say('<br/><br/>' + text);\n\t},\n\n\thandleTweet: function(t) {\n\t\t//alert('Tweet: ' + notesoup.dump(t));\n\t\tif (this.bigtalker)\n\t\t\treturn this.sendself('display', t.text);\n\n\t\tif ($n('tweet' + t.id)) return;\t\t// no dups please\n\t\tthis.maxid = Math.max(this.maxid || 0, t.id);\n\t\tvar theNote = {\n\t\t\tistweet: true,\n\t\t\tnotename: t.user.name || '?',\n\t\t\tscreenname: t.screen_name,\n\t\t\tid: 'tweet' + t.id,\n\t\t\tbgcolor: notesoup.ui.getRandomColor(),\n\t\t\tnosave: true,\n\t\t\tttl: this.tweetttl,\t\t//Math.floor(Math.random() * this.tweetttl),\n\t\t\t//xPos: Math.max(0, Math.floor(Math.random() * Ext.lib.Dom.getViewWidth() - notesoup.defaultNoteWidth)),\n\t\t\t//yPos: Math.max(30, Math.floor(Math.random() * Ext.lib.Dom.getViewHeight() - notesoup.defaultNoteHeight)),\n\t\t\tmtime: notesoup.getServerTime(),\n\t\t\ttext: [\n\t\t\t\t'<a href=\"http://twitter.com/', t.user.screen_name, '\" target=\"_blank\">',\n\t\t\t\t\t'<img src=\"', t.user.profile_image_url, '\"/>',\n\t\t\t\t'</a>',\n\t\t\t\tt.text, (t.truncated ? '...' : ''), '<br/>',\n\t\t\t\t'<hr/>', t.user.description, '<br/>'\n\t\t\t].join('') || '(gratuitous tweet)'\n\t\t};\n/*****\n\t\tif (t.text.charAt(0) == '@') {\n\t\t\tvar blankpos = t.text.search(' ');\n\t\t\tvar to = t.text.substr(1, blankpos-1);\n\t\t\tnotesoup.say('To: ' + to);\n\t\t\tfor (var n in notesoup.notes) {\n\t\t\t\tif (notesoup.notes[n].screen_name == to) {\n\t\t\t\t\ttheNote.xPos = notesoup.notes[n].xPos;\n\t\t\t\t\ttheNote.yPos = notesoup.notes[n].yPos + notesoup.notes[n].height + 36;\n\t\t\t\t\ttheNote.bgcolor = notesoup.notes[n].bgcolor;\n\t\t\t\t\tnotesoup.say('Match! ' + to, 'tell');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n*****/\n\t\tnotesoup.sound.play('/sound/35687__Bansemer__Clo_1CCE53.mp3');\n\t\tnotesoup.updateNote(theNote);\n\t\t//notesoup.postEvent('/folder/' + notesoup.foldername, 'updatenote', theNote);\n\t},\n\n\n\tgetURLHandler: function(response, success, options) {\n\t\tif (!success) {\n\t\t\tnotesoup.say('Failure loading data.');\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis.tweetstr = response.responseText;\n\t\t\t//alert(\"TWEETLOAD:\" + response.responseText);\n\t\t\tthis.tweets = Ext.util.JSON.decode(this.tweetstr);\t\t\t//.substr(15, this.tweetstr.length-16));\n\t\t\tthis.setContentDiv('Received ' + this.tweets.length + ' tweets...');\n\t\t\tthis.refreshtimer = this.refreshtimeout;\n\t\t\tthis.nexttweet = this.tweets.length - 1;\n\t\t\tthis.displaytimer = this.displaytimeout;\n\t\t\tthis.running = true;\n\t\t} catch (e) {\n\t\t\tthis.setContentDiv('Error loading data: ' + notesoup.dump(e));\n\t\t\tthis.init.defer(1000, this);\n\t\t}\n\t},\n\n\n\tontick: function() {\n\n\t\tif (!this.running) return;\n\n\t\t// shoot out the next note if we have one\n\t\tif (--this.displaytimer <= 0) {\n\t\t\tif (this.nexttweet >= 0) {\n\t\t\t\tthis.handleTweet(this.tweets[this.nexttweet--]);\n\t\t\t\tthis.displaytimer = this.displaytimeout;\n\t\t\t}\n\t\t}\n\n\t\t// make the notes vanish\n\t\tfor (var n in notesoup.notes) {\n\t\t\tvar thenote = notesoup.notes[n];\n\t\t\tif (thenote.istweet) {\n\t\t\t\tthenote.ttl = (thenote.ttl || 0) - 1;\n\t\t\t\tif (thenote.ttl > 0) {\n\t\t\t\t\tthenote.opacity = thenote.ttl / this.tweetttl;\n\t\t\t\t\tvar container = Ext.get(thenote.id + notesoup.ui.divSuffix);\n\t\t\t\t\tif (container) container.setStyle('opacity', '' + thenote.opacity);\n\t\t\t\t}\n\t\t\t\telse notesoup.destroyNote(thenote.id);\n\t\t\t}\t\t\t\t\n\t\t}\n\n\t\t// refresh our cache from twitter\n\t\tif (this.refreshtimer > 0) {\n\t\t\tthis.refreshtimer = this.refreshtimer - 1;\n\t\t\tthis.setContentDiv('Refresh in: ' + this.refreshtimer + ' seconds...');\n\t\t\tif (this.refreshtimer <= 0) this.gettweets();\n\t\t}\n\t},\n\n\tclick: function(e) {\n/***\n\t\tif (!this.feeddata) return;\n\t\tthis.currentImage = this.currentImage + 1;\n\t\tif (this.currentImage >= this.feeddata.items.length)\n\t\t\tthis.currentImage = 0;\n\t\tthis.show();\n***/\n\t}\n\n});\nExt.get(note.id+'_content').on('click', note.click, note);\nnote.init();\n</script>\nLoading...","notename":"Twitterizer","mtime":1203791184,"displaytimer":0,"bigtalker":false,"id":"notesIHyz021","displaytimeout":1}