{"xPos":682,"from":"soupmaster in soupmaster/@foo3","bgcolor":"#CCFFCC","text":"<script type='text/javascript'>\n/**\n*\tform.js - Note Soup generic form widget\n*\tCopyright 2007 by Bill Roy\n*\tAll rights reserved.\n*/\nvar note = notesoup.ui.getEnclosingNote(this);\nnote.set({\n\tinit: function() {\n\t\tif (!this.formfields) this.formfields = [\n\t\t\t//{label: 'Notes', fieldkey: 'notes', type: 'textarea'}\n\t\t];\n\t\tthis.show();\n\t},\n\n\tonrender: function() {\n\t\tvar myForm = new Ext.FormPanel({\n\t\t\tlabelWidth: 70,\n\t\t\tminButtonWidth: 25,\n\t\t\tbodyStyle: 'background:' + (this.bgcolor || notesoup.ui.defaultNoteColor),\n\t\t\tborder: false,\n\t\t\tbodyBorder: false,\n\t\t\titems: [{\n\t\t\t\txtype: 'hidden'\n\t\t\t}],\n\t\t\tbuttons: [{\n\t\t\t\ttext: 'save',\n\t\t\t\tminWidth: 50,\n\t\t\t\thandler: this.savedata,\n\t\t\t\tscope: this\n\t\t\t},{\n\t\t\t\ttext: '+',\n\t\t\t\tminWidth: 25,\n\t\t\t\thandler: this.insertfield,\n\t\t\t\tscope: this\n\t\t\t}]\n\t\t});\n\n\t\tfor (var i=0; i<this.formfields.length; i++) {\n\t\t\tmyForm.add({\n\t\t\t\txtype: this.formfields[i].type,\n\t\t\t\tfieldLabel: this.formfields[i].label,\n\t\t\t\tid: this.getFieldID(this.formfields[i].fieldkey),\n\t\t\t\tname: this.formfields[i].fieldkey,\n\t\t\t\tvalue: this.getdata(this.formfields[i].fieldkey),\n\t\t\t\twidth: this.width - 36 - 76\t\t\n\t\t\t});\n\t\t}\n\n\t\tthis.setContentDiv('');\n\t\tmyForm.render(this.getContentDiv());\n\t\tthis.setEphemeral('myForm', myForm);\n\t},\n\n\tgetdata: function(key) {\n\t\tif (key in this) return this[key];\n\t\treturn '';\n\t},\n\n\tsavedata: function() {\n\t\tfor (var f=0; f < this.formfields.length; f++) {\n\t\t\tthis[this.formfields[f].fieldkey] = this.getField('myForm', this.formfields[f].fieldkey);\n\t\t}\n\t\tthis.save();\n\t},\n\n\tinsertfield: function() {\n\t\tnotesoup.say('insertfield: ' + this.id);\n\t\tvar newfieldtype = prompt('New field type [textfield, textarea, checkbox, ...]', '');\n\t\tvar newfieldlabel = notesoup.prompt('New field display label:', '');\n\t\tvar newfieldkey = notesoup.prompt('New field key:', '');\n\t\tif ((newfieldtype.length > 0) && (newfieldlabel.length > 0) && (newfieldkey.length > 0)) {\n\t\t\tif (!(newfieldkey in this)) this[newfieldkey] = '';\n\t\t\tthis.formfields.push({label: newfieldlabel, fieldkey: newfieldkey, type: newfieldtype});\n\t\t\tthis.save();\n\t\t}\n\t},\n\n\tupdateValues: function() {\n\t\tfor (var f=0; f < this.formfields.length; f++) {\n\t\t\tthis.setValue('myForm', this.formfields[f].fieldkey, this[this.formfields[f].fieldkey]);\n\t\t}\n\t}\n});\nnote.init();\n</script>","formfields":[],"yPos":116,"height":77,"zIndex":115,"width":"250","notename":"Form","mtime":1196886541.004936,"id":"noterIxbQjqQ"}