{"viewfolder":"widgets/portablehole","imageroot":"http://notesoup.net/images/UII_Icons/32x32/","text":"<script type='text/javascript'>\n/**\n*\tporthole.js - Note Soup portable hole widget\n*\tCopyright 2007 by Bill Roy\n*\tAll rights reserved.\n*/\nvar note = notesoup.ui.getEnclosingNote(this);\nnote.set({\n\n\tisPortableHole: true,\n\n\tinit: function() {\n\t\tthis.bgcolor = '#eeeeee';\n\t\tthis.save();\n\t},\n\n\n\trefreshNoteList: function() {\n\t\tif (this.viewfolder) {\n\t\t\tdelete this.running;\n\t\t\tdelete this.notelist;\n\t\t\tdelete this.notedisplaylist;\n\t\t\tdelete this.targetnoteid;\n\t\t\tdelete this.targetnote;\t\t\n\t\t\tnotesoup.getNoteList(this.viewfolder, this.handleNoteListUpdate.createDelegate(this));\n\t\t\tthis.showLoading();\n\t\t}\n\t},\n\n\n\t/**\n\t*\tnotelist:\n\t*\t[0]: foldername like charlie/inbox\n\t*\t[1]: noteid like noteN003kkrOI\n\t*\t[2]: notename like shopping list\n\t*/\n\thandleNoteListUpdate: function(notelist) {\n\t\tthis.setContentDiv('');\t// kill the loading indicator\n\t\tthis.notelist = notelist;\n\t\tthis.notedisplaylist = [];\n\t\tthis.noteidlist = [];\n\t\tfor (var i=0; i < notelist.length; i++) {\n\t\t\tif (notelist[i][1].indexOf('.') < 0) {\n\t\t\t\tthis.notedisplaylist.push([notelist[i][2]]);\n\t\t\t\tthis.noteidlist.push(notelist[i][1]);\n\t\t\t}\n\t\t}\n\t\t//notesoup.say('Note id list: ' + notesoup.dump(this.noteidlist));\n\t\tthis.handleNotePick(null, null, 0);\n\t\tthis.running = true;\n\t},\n\n\n\thandleNotePick: function(combo, record, index) {\n\t\tif (this.guestnoteid) {\n\t\t\tnotesoup.destroyNote(this.guestnoteid);\n\t\t\tdelete this.guestnoteid;\n\t\t}\n\t\tif (index < 0) index = this.noteidlist.length - 1;\n\t\tif (index > this.noteidlist.length-1) index = 0;\n\t\tthis.targetnoteindex = index;\n\t\tthis.targetnoteid = this.noteidlist[this.targetnoteindex];\n\t\tnotesoup.postRequest({\n\t\t\tmethod:\"getnote\",\n\t\t\tparams:{\n\t\t\t\tfromfolder: this.viewfolder,\n\t\t\t\tnoteid: this.targetnoteid\n\t\t\t}\n\t\t},{\n\t\t\t//requestMessage: 'Fetching note...',\n\t\t\tsuccessProc: this.getNoteHandler,\n\t\t\tsuccessProcScope: this,\n\t\t\tfailureMessage: 'Could not fetch note: ' + this.targetnoteid\n\t\t});\n\t},\n\n\n\tgetNoteHandler: function(response, options) {\n\t\t//notesoup.say('Fetch complete.');\n\t\t//notesoup.say(response.responseText);\n\t\tvar response = Ext.util.JSON.decode(response.responseText);\n\n\t\tif (response['error']) {\n\t\t\tthis.targetnote = {\n\t\t\t\tnotename: 'Error',\n\t\t\t\ttext: '<br/><br/><center>Error fetching note: ' + response.error + '</center></br></br>',\n\t\t\t\tbgcolor: 'red'\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.targetnote = response.command[0][1];\n\t\t}\n\t\t//notesoup.say('GETNOTEHANDLER: ' + notesoup.dump(this.targetnote));\n\t\tthis.show();\n\t},\n\n\n\t// player control panel\n\timageroot: \t\t'http://notesoup.net/images/UII_Icons/32x32/',\n\tprevimage: \t\t'backward.png',\n\tstartimage: \t'play.png',\n\tpauseimage: \t'pause.png',\n\tnextimage:\t\t'forward.png',\n\trefreshimage: \t'refresh.png',\n\topenfolderimage:'open.png',\n\tsettingsimage:\t'configuration.png',\n\tsnapshotimage: \t'digital_camera.png',\n\n\timagedisplaytime: 6,\n\timagecountdown: 6,\n\n\tontick: function() {\n\t\tif (this.running) {\n\t\t\t//notesoup.say('countdown: ' + this.imagecountdown + typeof(this.imagecountdown));\n\t\t\tif (--this.imagecountdown <= 0) {\n\t\t\t\tthis.imagecountdown = this.imagedisplaytime;\n\t\t\t\tthis.nextNote();\n\t\t\t}\n\t\t}\n\t},\n\n\tprevNote: function() {\n\t\tthis.handleNotePick(null, null, this.targetnoteindex-1);\n\t},\n\n\tnextNote: function() {\n\t\tthis.handleNotePick(null, null, this.targetnoteindex+1);\n\t},\n\t\n\tpause: function() {\n\t\tnotesoup.say('Stopped.');\n\t\tdelete this.running;\n\t\tthis.show();\n\t},\n\n\tstart: function() {\n\t\tnotesoup.say('Starting...');\n\t\tthis.running = true;\n\t\tthis.show();\n\t},\n\t\n\topenfolder: function() {\n\t\tif (this.viewfolder)\n\t\t\tnotesoup.openFolder(this.viewfolder);\n\t},\n\t\n\tsettings: function() {\n\t\tvar f = notesoup.prompt('Enter the folder to view:', this.viewfolder || notesoup.foldername);\n\t\tif (!f) return;\n\t\tthis.viewfolder = f;\n\t\tthis.refreshNoteList();\n\t},\n\n\tclone: function(obj) {\n\t\tvar theclone = {};\n\t\tfor (var o in obj) theclone[o] = obj[o];\n\t\treturn theclone;\n\t},\n\n\tsnapshot: function() {\n\t\tvar newnote = this.clone(this.targetnote);\n\t\tdelete newnote.id;\n\t\tdelete newnote.homediv;\n\t\tdelete newnote.xPos;\n\t\tdelete newnote.yPos;\n\t\tdelete newnote.zIndex;\n\t\tnotesoup.saveNote(newnote, notesoup.foldername);\n\t},\n\n\tmakeButton: function(img, handler) {\n\t\treturn ['<img src=\"', this.imageroot, img, '\"',\n\t\t\t' onclick=\"notesoup.ui.getEnclosingNote(this).', handler, '();\"/>'].join('');\n\t},\n\n\trenderControls: function() {\n\t\tvar o = [];\n\t\to.push('<center>');\n\t\to.push(this.makeButton(this.settingsimage, 'settings'));\n\t\tif (this.notelist) {\n\t\t\to.push(this.makeButton(this.previmage, 'prevNote'));\n\n\t\t\tif (this.running) o.push(this.makeButton(this.pauseimage, 'pause'));\n\t\t\telse o.push(this.makeButton(this.startimage, 'start'));\n\n\t\t\to.push(this.makeButton(this.nextimage, 'nextNote'));\n\t\t\to.push(this.makeButton(this.snapshotimage, 'snapshot'));\n\t\t}\n\t\tif (this.viewfolder)\n\t\t\to.push(this.makeButton(this.openfolderimage, 'openfolder'));\n\t\to.push('</center>');\n\t\treturn o.join('');\n\t},\n\n\tupdateControls: function() {\n\t\tExt.get(this.id + '_title').update(this.renderControls());\n\t},\n\t\n\tguestNoteName: function() {\n\t\tfor (var i=0; i < 10000; i++) {\n\t\t\tvar name = 'guest' + notesoup.randomName(10);\n\t\t\tif (!$(name)) return name;\n\t\t}\n\t\tnotesoup.say('oops guestname');\n\t},\n\n\tonrender: function() {\n\t\tvar o = [];\n\t\tvar portHoleCover = {\n\t\t\tnotename: 'Portable Hole',\n\t\t\ttext: '<br/><br/><br/><center>.</center><br/><br/>',\n\t\t\tbgcolor: '#808080'\n\t\t};\n\t\tif (this.targetnote) {\n\t\t\tvar guestnote = this.clone(this.targetnote.isPortableHole ? portHoleCover : this.targetnote);\n\t\t\tguestnote.id = 'guest' + notesoup.randomName(10);\n\t\t\tguestnote.homediv = this.id + notesoup.ui.contentSuffix;\n\t\t\tguestnote.xPos = this.xPos + 20;\n\t\t\tguestnote.yPos = this.yPos + 50;\n\t\t\tguestnote.zIndex = this.zIndex + 1;\n\t\t\tnotesoup.updateNote(guestnote);\n\t\t\tthis.guestnoteid = guestnote.id;\n\t\t}\n\t\tthis.updateControls();\n\t},\n\t\n\n\twidthOffset: 40,\n\theightOffset: 100,\n\tminWidth: 100,\n\tminHeight: 100,\n\n\tsyncHeight: function() {\n\n\t\tif (!this.targetnote) return;\t\t// soupnote.prototype.syncHeight();\n\t\tvar guestdiv = Ext.get(this.guestnoteid + notesoup.ui.divSuffix);\n\t\tif (!guestdiv) {\n\t\t\t//notesoup.say('Could not fetch guest div.', 'error');\n\t\t\treturn;\n\t\t}\n\t\tvar guestsize = guestdiv.getSize();\n\t\tguestsize.width = Math.max(guestsize.width, this.minWidth);\n\t\tguestsize.height = Math.max(guestsize.height, this.minHeight);\n\t\t//notesoup.say('Adjusting to guest size: ' + guestsize.width + ' ' + guestsize.height);\n\n\t\tvar outerDiv = Ext.get(this.id + notesoup.ui.divSuffix);\n\t\tvar noteDiv = Ext.get(this.id);\n\t\tvar contentDiv = Ext.get(this.id + notesoup.ui.contentSuffix);\n\t\tif (!outerDiv || !contentDiv) {\n\t\t\tnotesoup.say('No outer DIV or no content DIV.', 'error');\n\t\t}\n\t\tcontentDiv.setSize(guestsize.width, guestsize.height, true);\n\t\tnoteDiv.setSize(guestsize.width + this.widthOffset, guestsize.height + this.heightOffset, true);\n\t\touterDiv.setSize(guestsize.width + this.widthOffset, guestsize.height + this.heightOffset, true);\n\t}\n});\nnote.init();\n</script>","height":40,"guestnoteid":"guestM4MgUMVpPj","widthOffset":40,"mtime":1196983509.573913,"nextimage":"forward.png","id":"note2TJobYY3","previmage":"backward.png","from":"widgets from widgets/portablehole","pauseimage":"pause.png","isPortableHole":true,"minWidth":100,"bgcolor":"#eeeeee","targetnoteindex":0,"heightOffset":100,"notelist":[["widgets/portablehole","notelymYrmoX","What on Earth Is It For?"],["widgets/portablehole","notebA8wY1eY","Welcome"],["widgets/portablehole","noteLJCVNjF4","Behold the portable hole.  Below, that is."],["widgets/portablehole","note2TJobYY3","Portable Hole"],["widgets/portablehole","notej6hJqEat","What is the Portable Hole?"],["widgets/portablehole","noteU2xx3zAf","How to Use the Portable Hole"]],"imagecountdown":6,"refreshimage":"refresh.png","minHeight":100,"running":true,"notedisplaylist":[["What on Earth Is It For?"],["Welcome"],["Behold the portable hole.  Below, that is."],["Portable Hole"],["What is the Portable Hole?"],["How to Use the Portable Hole"]],"targetnote":{"xPos":340.510159,"from":"widgets in widgets/portablehole","width":"250","text":"Remixing content by syndicating portions of one folder into another is part of the 'connect the outputs to the inputs' meme in Note Soup.<div><br class=\"webkit-block-placeholder\"></div><div>Think of the Hole as a way to multiplex information from several workspaces down into one workspace, spread across the time domain. Â There are use cases for kiosks, bulletin board rollup, or just dropping a news badge on your home folder.</div>","yPos":256.200302,"height":235,"zIndex":38,"bgcolor":"#CCFFCC","notename":"What on Earth Is It For?","mtime":1196515386.440942,"id":"notelymYrmoX"},"xPos":37,"noteidlist":["notelymYrmoX","notebA8wY1eY","noteLJCVNjF4","note2TJobYY3","notej6hJqEat","noteU2xx3zAf"],"startimage":"play.png","settingsimage":"configuration.png","yPos":195,"imagedisplaytime":6,"notename":"Portable Hole","snapshotimage":"digital_camera.png","openfolderimage":"open.png","targetnoteid":"notelymYrmoX","width":"250"}