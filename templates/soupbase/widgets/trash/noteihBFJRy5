{"xPos":325,"from":"widgets from widgets/@lab","width":"250","text":"<script type='text/javascript'>\n/**\n*\tporthole.js - Note Soup portable hole widget\n*\tCopyright 2007 by Bill Roy\n*\tAll rights reserved.\n*/\nvar note = notesoup.ui.getEnclosingNote(this);\nnote.set({\n\n\tisPortableHole: true,\n\n\trefreshNoteList: function() {\n\t\tdelete this.notelist;\n\t\tdelete this.notedisplaylist;\n\t\tdelete this.targetnoteid;\n\t\tdelete this.targetnote;\n\t\tnotesoup.getNoteList(this.viewfolder, this.handleNoteListUpdate.createDelegate(this));\n\t\tthis.showLoading();\n\t},\n\n\n\t/**\n\t*\tnotelist:\n\t*\t[0]: foldername like charlie/inbox\n\t*\t[1]: noteid like noteN003kkrOI\n\t*\t[2]: notename like shopping list\n\t*/\n\thandleNoteListUpdate: function(notelist) {\n\t\t//Ext.get(this.id + '_ph_fp').selectByValue(this.viewfolder, true);\n\t\tthis.notelist = notelist;\n\t\tthis.notedisplaylist = [];\n\t\tthis.noteidlist = [];\n\t\tfor (var i=0; i < notelist.length; i++) {\n\t\t\tif (notelist[i][1].indexOf('.') < 0) {\n\t\t\t\tthis.notedisplaylist.push([notelist[i][2]]);\n\t\t\t\tthis.noteidlist.push(notelist[i][1]);\n\t\t\t}\n\t\t}\n\t\t//notesoup.say('Note id list: ' + notesoup.dump(this.noteidlist));\n\t\tthis.handleNotePick(null, null, 0);\n\t\tthis.running = true;\n\t},\n\n\n\thandleNotePick: function(combo, record, index) {\n\t\tif (index < 0) index = this.noteidlist.length - 1;\n\t\tif (index > this.noteidlist.length-1) index = 0;\n\t\tthis.targetnoteindex = index;\n\t\tthis.targetnoteid = this.noteidlist[this.targetnoteindex];\n\t\tnotesoup.postRequest({\n\t\t\tmethod:\"getnote\",\n\t\t\tparams:{\n\t\t\t\tfromfolder: this.viewfolder,\n\t\t\t\tnoteid: this.targetnoteid\n\t\t\t}\n\t\t},{\n\t\t\t//requestMessage: 'Fetching note...',\n\t\t\tsuccessProc: this.getNoteHandler,\n\t\t\tsuccessProcScope: this,\n\t\t\tfailureMessage: 'Could not fetch note: ' + this.targetnoteid\n\t\t});\n\t},\n\n\n\tgetNoteHandler: function(response, options) {\n\t\t//notesoup.say('Fetch complete.');\n\t\t//notesoup.say(response.responseText);\n\t\tvar response = Ext.util.JSON.decode(response.responseText);\n\t\tthis.targetnote = response.command[0][1];\n\t\t//notesoup.say('GETNOTEHANDLER: ' + notesoup.dump(this.targetnote));\n\t\tthis.show();\n\t},\n\n\n\tlistwrap: function(list) {\n\t\tvar o = [];\n\t\tif (list) for (var i=0; i < list.length; i++) {\n\t\t\to.push([list[i]]);\n\t\t}\n\t\treturn o;\n\t},\n\n\n\n\t// player control panel\n\timageroot: \t\t'http://notesoup.net/images/UII_Icons/32x32/',\n\tprevimage: \t\t'backward.png',\n\tstartimage: \t'play.png',\n\tpauseimage: \t'pause.png',\n\tnextimage:\t\t'forward.png',\n\trefreshimage: \t'refresh.png',\n\topenfolderimage:'open.png',\n\tsettingsimage:\t'configuration.png',\n\n\timagedisplaytime: 6,\n\timagecountdown: 6,\n\n\tontick: function() {\n\t\tif (!this.running) return;\n\t\t//notesoup.say('countdown: ' + this.imagecountdown + typeof(this.imagecountdown));\n\t\tif (--this.imagecountdown <= 0) {\n\t\t\tthis.imagecountdown = this.imagedisplaytime;\n\t\t\tthis.nextNote();\n\t\t}\n\t},\n\n\tprevNote: function() {\n\t\tthis.handleNotePick(null, null, this.targetnoteindex-1);\n\t},\n\n\tnextNote: function() {\n\t\tthis.handleNotePick(null, null, this.targetnoteindex+1);\n\t},\n\t\n\tpause: function() {\n\t\tnotesoup.say('Stopped.');\n\t\tdelete this.running;\n\t\tthis.show();\n\t},\n\n\tstart: function() {\n\t\tnotesoup.say('Starting...');\n\t\tthis.running = true;\n\t\tthis.show();\n\t},\n\t\n\topenfolder: function() {\n\t\tif (this.viewfolder)\n\t\t\tnotesoup.openFolder(this.viewfolder);\n\t},\n\t\n\tsettings: function() {\n\t\tvar f = notesoup.prompt('Enter the folder to view:', this.viewfolder);\n\t\tif (!f) return;\n\t\tthis.viewfolder = f;\n\t\tthis.refreshNoteList();\n\t},\n\n\tmakeButton: function(img, handler) {\n\t\treturn ['<img src=\"', this.imageroot, img, '\"',\n\t\t\t' onclick=\"notesoup.ui.getEnclosingNote(this).', handler, '();\"/>'].join('');\n\t},\n\n\trenderControls: function() {\n\t\tvar o = [];\n\t\to.push('<center>');\n\t\to.push(this.makeButton(this.settingsimage, 'settings'));\n\t\tif (this.notelist) {\n\t\t\to.push(this.makeButton(this.previmage, 'prevNote'));\n\n\t\t\tif (this.running) o.push(this.makeButton(this.pauseimage, 'pause'));\n\t\t\telse o.push(this.makeButton(this.startimage, 'start'));\n\n\t\t\to.push(this.makeButton(this.nextimage, 'nextNote'));\n\t\t}\n\t\tif (this.viewfolder)\n\t\t\to.push(this.makeButton(this.openfolderimage, 'openfolder'));\n\t\to.push('</center>');\n\t\treturn o.join('');\n\t},\n\n\tonrender: function() {\n\t\tvar o = [];\n\t\tif (this.targetnote) {\n\t\t\tvar t = new soupnote(this.targetnote);\n\t\t\to.push(t.onrender());\n\t\t\tdelete t;\n\t\t}\n\t\tExt.get(this.getContentDiv()).update(o.join(''), true);\t// true to load scripts\n\t\tExt.get(this.id + '_title').update(this.renderControls());\n\t},\n\n\tonrender2: function() {\n\t\tvar o = [];\n\n\t\to.push(this.renderControls());\n\t\ttitle = Ext.get(this.id + '_title');\n\t\tif (title) title.update(this.notename);\n\n\t\tif (this.targetnote) {\n\t\t\tvar t = new soupnote(this.targetnote);\n\t\t\to.push('<hr/>');\n\t\t\to.push(t.getMarkup());\n\t\t\tdelete t;\n\t\t}\n\t\tExt.get(this.getContentDiv()).update(o.join(''), true);\t// true to load scripts\n\t}\n});\nnote.show();\n</script>","yPos":175,"height":185,"bgcolor":"#FFFF99","notename":"h","mtime":1196519677.746694,"id":"noteihBFJRy5"}