{"xPos":32,"from":"widgets from widgets/time","width":300,"text":"<script type='text/javascript'>\n/**\n*\tperiodicalreminder.js - Note Soup reminder widget\n*\tCopyright 2007 by Bill Roy\n*\tAll rights reserved.\n*/\nvar note = notesoup.ui.getEnclosingNote(this);\nnote.set({\n\tonrender: function() {\n\t\tif (this.running) this.updateDisplay();\n\t\telse this.showInputForm();\n\t},\n\n\tshowInputForm: function() {\n\t\tvar reminderForm = new Ext.form.Form({\n\t\t\tlabelWidth: 75, \n\t\t\tlabelalign: 'top'\n\t\t});\n\t\treminderForm.add(\n\t\t\tnew Ext.form.TextField({\n\t\t\t\tfieldLabel: 'Subject',\n\t\t\t\tname: 'remindername',\n\t\t\t\tvalue: this.notename,\n\t\t\t\twidth: 175\n\t\t\t}),\n\t\t\tnew Ext.form.TextField({\n\t\t\t\tfieldLabel: 'In how long',\n\t\t\t\tname: 'duration',\n\t\t\t\tvalue: this.durationstring,\n\t\t\t\twidth: 175\n\t\t\t}),\n\t\t\tnew Ext.form.Checkbox({\n\t\t\t\tfieldLabel: 'Auto restart',\n\t\t\t\tchecked: this.autorestart,\n\t\t\t\tname: 'autorestart'\n\t\t\t})\n\t\t);\n\n\t\treminderForm.addButton({\n\t\t\ttext: 'remind me',\n\t\t\thandler: this.submitReminder,\n\t\t\tscope: this\n\t\t});\n\n\t\tvar thediv = this.getContentDiv();\n\t\tthediv.innerHTML = '<br/><center><h2>Periodical Reminder Settings</h2></center><br/>';\n\t\treminderForm.render(thediv);\n\t\tthis.setEphemeral('reminderForm', reminderForm);\n\t\t//Ext.get(thediv).addKeyListener(13, this.submitReminder, this);\n\t},\n\n\tsubmitReminder: function(e) {\n\t\tvar v = this.getEphemeral('reminderForm').getValues();\n\t\tnotesoup.say('Setting reminder to: ' + v['remindername'] + ' in ' + v['duration']);\n\t\tthis.setupClock(v['remindername'], v['duration'], v['autorestart']);\n\t\tthis.startClock();\n\t\t//this.save();\n\t},\n\n\tsetupClock: function(name, duration, autorestart) {\n\t\tif (!name || !duration) return;\n\t\tvar t = new Date();\n\t\tthis.set({\n\t\t\tnotename: name,\n\t\t\tclockstartstring: t.toString(),\n\t\t\tclockstart: t.getTime(),\n\t\t\tclockduration: notesoup.getDuration(duration),\n\t\t\tdurationstring: duration,\n\t\t\tautorestart: autorestart\n\t\t});\n\t\tExt.get(this.id + '_title').update(name);\n\t},\n\n\tstartClock: function() {\n\t\tthis.running = true;\n\t\tthis.complete = false;\n\t\tthis.editing = false;\n\t\tthis.ontick = function() {this.onrender();}\n\t\tthis.flash('#22f822');\n\t},\n\t\n\trestartClock: function() {\n\t\tthis.setupClock(this.notename, this.durationstring, this.autorestart);\n\t\tthis.startClock();\n\t},\n\n\tstopClock: function() {\n\t\tthis.running = false;\n\t\tdelete this.ontick;\n\t\tvar outerDiv = Ext.get(this.id + notesoup.ui.divSuffix);\n\t\touterDiv.setStyle('opacity', 1.0);\n\t},\n\t\n\teditClock: function() {\n\t\tthis.stopClock();\n\t\tthis.editing = true;\n\t\tthis.show();\n\t},\n\t\n\tontimercomplete: function() {\n\t\tnotesoup.say('Ding! ' + this.notename);\n\t},\n\n\tupdateDisplay: function() {\n\n\t\tvar timediff = new Date().getTime() - this.clockstart;\n\t\tthis.completed = timediff / this.clockduration;\n\t\tif ((this.completed >= 1.0)  || (this.completed < 0)) {\n\t\t\tif (!this.complete) {\n\t\t\t\tthis.ontimercomplete();\n\t\t\t\tthis.complete = true;\n\t\t\t\tif (this.autorestart) this.restartClock();\n\t\t\t}\n\t\t}\n\t\tvar bg = '#ff3030';\n\t\tif (this.completed < 0.75) bg = '#80ff80';\n\t\telse if (this.completed < 0.90) bg = '#ffff30';\n\n\t\tthis.setContentDiv([\n\t\t\t'<br/><h2><center>', \n\t\t\t\tthis.complete ? 'PAST DUE<br/>' : '',\n\t\t\t\tnotesoup.stringifyTimeDiff(timediff), \n\t\t\t\t' (', ''+Math.floor(100 * this.completed), '%) of ', this.durationstring, '<br/>',\n\t\t\t\t'since ', ''+this.clockstartstring,\n\t\t\t'</center></h2><br/>'\n\t\t].join(''));\n\n\t\tvar outerDiv = Ext.get(this.id + notesoup.ui.divSuffix);\n\t\touterDiv.setStyle('opacity', '' + Math.max(0.05, this.completed));\n\t\t\n\t\touterDiv.on('dblclick', function(e) {\n\t\t\tvar thenote = notesoup.notes[notesoup.ui.getNoteIDFromWindowID(this.id)];\n\t\t\tthenote.editClock();\n\t\t\treturn true;\n\t\t});\n\t\t\n\t\tvar innerDiv = Ext.get(this.id + notesoup.ui.contentSuffix);\n\t\tinnerDiv.setStyle('background', bg);\n\n\t\tvar runningForm = new Ext.form.Form({\n\t\t\tlabelWidth: 75, \n\t\t\tlabelalign: 'top'\n\t\t});\n\t\trunningForm.addButton({\n\t\t\ttext: 'restart',\n\t\t\thandler: this.restartClock,\n\t\t\tscope: this\n\t\t});\n\t\trunningForm.addButton({\n\t\t\ttext: 'edit',\n\t\t\thandler: this.editClock,\n\t\t\tscope: this\n\t\t});\n\t\trunningForm.render(innerDiv);\n\t}\n\t\n});\nnote.show();\n</script>","yPos":145,"height":186,"bgcolor":"#99CCFF","notename":"Periodical Reminder","mtime":1196984302.912794,"id":"noteiLWWWDZ8"}