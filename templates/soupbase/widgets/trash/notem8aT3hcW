{"xPos":13,"from":"widgets from widgets/poll","voteypos":36,"width":"250","text":"<script type='text/javascript'>\n/**\n*\tpoll.js - Note Soup polling widget\n*\tCopyright 2007 by Bill Roy\n*\tAll rights reserved.\n*/\nvar note = notesoup.ui.getEnclosingNote(this);\nnote.set({\n\n\tvotespervoter: 1,\n\n\txPos: 12,\n\tyPos: 36,\n\n\tvotexpos: 276,\n\tvoteypos: 36,\n\tvoteyinc: 42,\n\n\n\tunlockFolder: function() {\n\t\tnotesoup.setFolderACL(notesoup.foldername, {\n\t\t\treaders: '*',\n\t\t\tsenders: '*'\n\t\t});\n\t},\n\n\n\tlockFolder: function() {\n\t\tnotesoup.setFolderACL(notesoup.foldername, {\n\t\t\t//readers: '-*',\n\t\t\tsenders: '-*'\n\t\t});\n\t},\n\n\n\tisPollOwner: function() {\n\t\treturn (notesoup.loggedin && (notesoup.username == notesoup.foldername.split('/')[0]));\n\t},\n\n\n\tgetTopic: function(save) {\n\t\tthis.topic = notesoup.prompt('Enter a topic for the poll:', this.topic);\n\t\tif (save) {\n\t\t\tthis.save();\n\t\t\tthis.show();\n\t\t}\n\t},\n\n\n\tstartPoll: function() {\n\t\tif (!this.running && notesoup.loggedin && this.isPollOwner()) {\n\t\t\tif (!this.topic) this.getTopic();\n\t\t\tvar duration = notesoup.prompt('Starting poll: How long should voting be open?', '100 seconds');\n\t\t\tif (!duration) return;\n\t\t\tduration = notesoup.getDuration(duration);\n\t\t\tif (!duration) return;\n\t\t\tthis.starttime = new Date().getTime();\n\t\t\tthis.duration = duration;\n\t\t\tthis.endtime = this.starttime + duration;\n\t\t\tthis.polluser = notesoup.username;\n\t\t\tthis.unlockFolder();\n\t\t\tthis.running = true;\n\t\t\tthis.ended = false;\n\t\t\tthis.save();\n\t\t\tthis.show();\n\t\t\tnotesoup.folderSync();\n\t\t\tnotesoup.say('The poll is running.');\n\t\t}\n\t\telse {\n\t\t\tnotesoup.say('Sorry, only the poll owner can start the poll.', 'error');\n\t\t}\n\t},\n\n\n\tendPoll: function() {\n\t\tif (this.running && this.isPollOwner()) {\n\t\t\tthis.running = false;\n\t\t\tthis.ended = true;\n\t\t\tnotesoup.say('Ending poll...');\n\t\t\tthis.lockFolder();\n\t\t\tthis.updateVoteCounts();\n\t\t\tthis.save();\n\t\t\tnotesoup.folderSync();\n\t\t\tnotesoup.folderSay('The poll is closed.');\n\t\t}\n\t\telse {\n\t\t\tthis.running = false;\n\t\t}\n\t},\n\t\n\n\taddChoice: function() {\n\t\tif (this.running) return;\n\t\tif (!this.isPollOwner()) return;\n\t\tvar choicetext = prompt('Add Choice: Enter the text for this poll choice:', '');\n\t\tif (!choicetext) return;\n\t\tif (this.choices == undefined) this.choices = [];\n\t\tthis.choices.push(choicetext);\n\t\tif (this.votecounts == undefined) this.votecounts = [];\n\t\tthis.votecounts.push(0);\n\t\tthis.save();\n\t\tthis.show();\n\t},\n\n\n\tvote: function(choiceindex) {\n\t\tif (!notesoup.loggedin || !notesoup.username) {\n\t\t\tnotesoup.say('Sorry, you must be logged in to vote.', 'error');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.running) {\n\t\t\tnotesoup.say('Sorry, the poll is not running.', 'error');\n\t\t\treturn;\n\t\t}\n\t\tif ((choiceindex > this.choices.length) || (choiceindex < 0)) return;\n\t\tnotesoup.say('Submitting your vote: ' + this.choices[choiceindex]);\n\n\t\tvar id = 'notepollvote' + notesoup.randomName(20);\n\t\tnotesoup.saveNote({\n\t\t\tnotename: 'vote',\n\t\t\tid: id,\n\t\t\txPos: this.votexpos,\n\t\t\tyPos: this.voteypos,\n\t\t\tapropos: this.id,\n\t\t\tbgcolor: notesoup.ui.defaultNoteColor,\n\t\t\ttext: this.choices[choiceindex]\n\t\t}, notesoup.username + '/inbox');\n\t\tnotesoup.sendNote.defer(2000, notesoup, [id, notesoup.username + '/inbox', notesoup.foldername, true]);\n\t\tthis.voteypos += this.voteyinc;\n\t},\n\n\n\n\ttallyVote: function(vote) {\n\t\tfor (var c=0; c < this.choices.length; c++) {\n\t\t\tif (vote.text == this.choices[c]) {\n\t\t\t\tvar voter = vote.sentby.split(' ')[0];\n\t\t\t\tif (!(voter in this.votes)) this.votes[voter] = [];\n\t\t\t\tthis.votes[voter].push(c);\n\t\t\t\twhile (this.votes[voter].length > this.votespervoter) {\n\t\t\t\t\t//notesoup.say('discarding rolloff vote for ' + voter);\n\t\t\t\t\tthis.votes[voter].shift();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthenote.flash('chocolate');\n\t\tnotesoup.say('Invalid poll choice.');\n\t},\n\n\n\ttotalize: function() {\n\t\tfor (var i=0; i < this.choices.length; i++) this.votecounts[i] = 0;\n\t\tthis.totalvotes = 0;\n\t\tfor (var voter in this.votes) {\n\t\t\tfor (var vote=0; vote < this.votes[voter].length; vote++) {\n\t\t\t\t//notesoup.say('Totalizer: ' + voter + ' ' + vote + ' ' + this.votes[voter][vote]);\n\t\t\t\tthis.votecounts[this.votes[voter][vote]]++;\n\t\t\t\tthis.totalvotes++;\n\t\t\t}\n\t\t}\n\t\tnotesoup.say('Totalizer sees ' + this.totalvotes + ' votes.', 'whisper');\n\t},\n\n\n\tpostGrandTotal: function() {\n\t\tvar t = this.totalvotes ? this.totalvotes : 0;\n\t\tExt.get(this.id + '_pc_total').update('<hr/>Total votes: ' + t);\n\t},\n\n\n\tpostTotals: function() {\n\t\tfor (var i=0; i < this.choices.length; i++) {\n\t\t\tExt.get(this.id + '_pc_v_' + i).update(''+this.votecounts[i]);\n\t\t}\n\t\tthis.postGrandTotal();\n\t},\n\n\n\tupdateVoteCounts: function() {\n\t\tthis.votes = {};\n\t\tvar notelist = notesoup.getNotesOrderedBy('mtime', true);\n\t\tfor (var n=0; n < notelist.length; n++) {\n\t\t\tvar thenote = notesoup.notes[notelist[n]];\n\t\t\tif (thenote.id == this.id) continue;\n\t\t\tif (!thenote.notename) continue;\n\t\t\tif (thenote.notename != 'vote') continue;\n\t\t\tif (!thenote.apropos) continue;\n\t\t\tif (thenote.apropos != this.id) continue;\n\n\t\t\tif (!thenote.text || !thenote.sentby || !thenote.mtime || \n\t\t\t\t(thenote.mtime * 1000 < this.starttime) || (thenote.mtime * 1000 > this.endtime)) {\n\t\t\t\tif (this.isPollOwner()) {\n\t\t\t\t\tnotesoup.say('Deleting malformed vote.');\n\t\t\t\t\tthenote.destroy();\n\t\t\t\t}\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\tthis.tallyVote(thenote);\n\t\t}\n\t\tthis.totalize();\n\t\tthis.postTotals();\n\t},\n\n\n\tontick: function() {\n\t\tif (!this.running) return;\n\t\tif (new Date() > this.endtime) {\n\t\t\tif (this.isPollOwner()) {\n\t\t\t\tthis.endPoll();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.running = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// update time remaining\n\t\tthis.timeleft = this.endtime - new Date();\n\t\tExt.get(this.id + '_pc_timeleft').update('Time remaining: ' + notesoup.stringifyTimeDiff(this.timeleft));\n\n\t\t// set the color\n\t\tvar newcolor = '';\n\t\tif (this.timeleft < (15*1000)) newcolor = 'red';\n\t\telse if (this.timeleft < (60*1000)) newcolor = 'yellow';\n\t\tif (newcolor) {\n\t\t\tthis.getContentDiv().style.background = newcolor;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.updateVoteCounts();\n\t\t} catch(e) {\n\t\t\tnotesoup.say('Exception updating vote count: ' + notesoup.dump(e));\n\t\t\treturn;\n\t\t}\n\t},\n\n\n\tformatChoice: function(index) {\n\t\treturn(['<tr>',\n\t\t\t'<td>',\n\t\t\t\tthis.running ? '<input type=\"submit\" value=\"vote\"'+\n\t\t\t\t\t' onclick=\"notesoup.ui.getEnclosingNote(this).vote(' + index + ');\"/>' : '&bull;&nbsp;',\n\t\t\t'</td>',\n\t\t\t'<td style=\"width:80%;\">', this.choices[index], '</td>',\n\t\t\t'<td style=\"align:right;\"><span id=\"', \n\t\t\tthis.id, '_pc_v_', \n\t\t\t''+index, '\">', \n\t\t\t''+this.votecounts[index], \n\t\t\t'</span></td>',\n\t\t'</tr>'].join(''));\n\t},\n\n\n\tonrender: function() {\n\t\tvar o = [];\n\t\t\n\t\tif (this.running || this.ended || this.isPollOwner()) {\n\n\t\t\to.push(\n\t\t\t\tthis.topic ? this.topic : this.isPollOwner() ? 'Click \"enter topic\" to supply a topic for this space.' : '',\n\t\t\t\t'<hr/>',\n\t\t\t\t'<center>',\n\t\t\t\t\tthis.running ? 'The poll is open.' : \n\t\t\t\t\t\tthis.ended ? 'The poll has ended.' : \n\t\t\t\t\t\t\t'The poll has not started.',\n\t\t\t\t\t'<br/>',\n\t\t\t\t\t'<span id=\"', this.id, '_pc_timeleft\">&nbsp;</span>',\n\t\t\t\t'</center><hr/>');\n\n\t\t\tif (this.choices) {\n\t\t\t\to.push('<table>');\n\t\t\t\tfor (var c=0; c < this.choices.length; c++) {\n\t\t\t\t\to.push(this.formatChoice(c));\n\t\t\t\t}\n\t\t\t\to.push('</table>');\n\t\t\t}\n\t\t\telse o.push('There are no choices for the poll yet.  Click \"add choice\" to get started.');\n\t\t\to.push('<span style=\"align:right;\" id=\"', this.id, '_pc_total\"></span>');\n\t\t}\n\t\telse {\n\t\t\to.push('<br/><br/><center>The poll has not started.</center><br/><br/>');\n\t\t}\n\n\t\tif (this.isPollOwner()) {\n\t\t\tif (this.running) {\n\t\t\t\to.push('<hr/><center>',\n\t\t\t\t\t'<input type=\"submit\" value=\"end poll\"',\n\t\t\t\t\t' onclick=\"notesoup.ui.getEnclosingNote(this).endPoll();\"/>',\n\t\t\t\t\t'</center>');\n\t\t\t} else {\n\t\t\t\to.push('<hr/><center>',\n\t\t\t\t\t'<input type=\"submit\" value=\"enter topic\"',\n\t\t\t\t\t' onclick=\"notesoup.ui.getEnclosingNote(this).getTopic(true);\"/>',\n\t\t\t\t\t'&nbsp;',\n\t\t\t\t\t'<input type=\"submit\" value=\"add choice\"',\n\t\t\t\t\t' onclick=\"notesoup.ui.getEnclosingNote(this).addChoice();\"/>');\n\t\t\t\tif (this.choices) o.push(\n\t\t\t\t\t'&nbsp;',\n\t\t\t\t\t'<input type=\"submit\" value=\"start poll\"',\n\t\t\t\t\t' onclick=\"notesoup.ui.getEnclosingNote(this).startPoll();\"/>');\n\t\t\t\to.push('</center>');\n\t\t\t}\n\t\t}\n\t\tthis.setContentDiv(o.join(''));\n\t\tthis.postGrandTotal.defer(200, this);\n\t}\n});\nnote.show();\n</script>\nloading...","voteyinc":42,"yPos":135,"height":219,"bgcolor":"#99CCFF","mtime":1196286160.101468,"notename":"Polling Widget","votespervoter":1,"id":"notem8aT3hcW","votexpos":276}